@import "styles/mixins";

.container,
.row {
  list-style: none;
  margin: 0;
  padding: 0;
}

.row {
  display: grid;
  grid-template-columns: repeat(12, 1fr);

  > li {
    margin: 0 3px 3px 3px;
  }

  &[data-rows='1'] {
    grid-template-columns: repeat(12, 1fr);
  }

  &[data-rows='2'] {
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: 1fr 1fr;
  }

  &[data-rows='3'] {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);
  }

  &[data-rows='4'] {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }

  &[data-rows='6'] {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(6, 1fr);
  }

  &[data-rows='12'] {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(12, 1fr);
  }
}


.container {
  display: flex;
  align-items: flex-start;
  justify-content: center;
  counter-reset: slots;
  flex-direction: row;
  margin-bottom: $spacing-sm;
  max-width: 838px;
  flex-wrap: wrap;
  column-gap: $spacing-xl;
  row-gap: $spacing-base;

  > li {
    position: relative;
  }

  > li::before {
    content: counter(slots);
    counter-increment: slots;
    font-weight: 400;
    left: -20px;
    opacity: 0.66;
    position: absolute;
    top: 30px;
  }
}

.rowWrapper {
  border-top: 1px solid rgb(255 255 255 / 10%);
  padding: $spacing-base 0 0;
  height: 100%;

  .layoutControl {
    position: absolute;
    left: 5px;
    bottom: 100%;
    transform: translateY(15px);
    opacity: 0;
    transition-property: opacity, transform;
    transition-duration: 0.3s;
    transition-timing-function: ease;
  }

  &:hover {
    .layoutControl {
      opacity: 1;
      transform: translateY(10px);
    }
  }
}
