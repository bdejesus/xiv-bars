@import "styles/mixins";

.container,
.row {
  list-style: none;
  margin: 0;
  padding: 0;
}

.row {
  display: grid;
  grid-template-columns: repeat(12, 1fr);

  > li {
    margin: 0 3px 3px;
  }

  &[data-rows='1'] {
    grid-template-columns: repeat(12, 1fr);
  }

  &[data-rows='2'] {
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: 1fr 1fr;
  }

  &[data-rows='3'] {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);
  }

  &[data-rows='4'] {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }

  &[data-rows='6'] {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(6, 1fr);
  }

  &[data-rows='12'] {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(12, 1fr);
  }
}

.rowWrapper {
  border-top: 1px solid rgb(255 255 255 / 10%);
  height: 100%;
  padding-top: $spacing-base;

  .layoutControl {
    background-color: #222;
    border: none;
    border-radius: 6px;
    bottom: 100%;
    box-shadow: 0 2px 1px rgb(255 255 255 / 25%);
    color: #fff;
    left: 3px;
    opacity: 0;
    padding: 4px 6px;
    position: absolute;
    transform: translateY(15px);
    transition-duration: $timing-default;
    transition-property: opacity, transform;
    transition-timing-function: ease;
  }

  &:hover .layoutControl {
    opacity: 1;
    transform: translateY(11px);
  }
}

.container {
  align-items: flex-start;
  counter-reset: slots;
  display: flex;
  flex-flow: row wrap;
  gap: $spacing-base $spacing-xl;

  > li {
    display: flex;
    flex-direction: row;
    align-items: center;
    position: relative;
    gap: $spacing-sm;
  }

  > li::before {
    content: counter(slots);
    counter-increment: slots;
    font-weight: 400;
    min-width: 1em;
    opacity: 0.66;
    text-align: right;
    top: 25px;
  }

  > li:empty {
    pointer-events: none;
    position: absolute;

    &::before {
      opacity: 0;
    }
  }

  :global(.slot) {
    transition-duration: 0.33s;
    transition-property: margin;
    transition-timing-function: ease;
  }

  &[data-show-titles='true'] {
    gap: $spacing-base 100px;

    :global(.slot) {
      margin: $spacing-xs $spacing-xs $spacing-lg;
    }

    [data-rows='12'] {
      :global(.slot) {
        margin-bottom: $spacing-sm;
      }

      :global(.action)::after {
        align-items: center;
        bottom: 0;
        display: flex;
        left: 100%;
        margin: 0 0 0 $spacing-sm;
        text-align: left;
        top: 0;
      }
    }
  }
}
